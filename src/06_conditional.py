# 06_conditional.py

'''
    제어문 - 조건문, 반복문
     > 코드를 상황에 따라 제어한다. (프로그램의 흐름을 제어한다.)

    [조건문]
        조건문?!
            조건을 판단하여 상황에 맞게 처리

        if문      - 만약 , ~~~~면
            '만약' 조건에 만족하면 수행해라!
                만족한다 = True
                만족하지 않는다 = False
'''

# (1) if문
'''
num = int( input("숫자 입력 : ") )

if num > 0 :
    print("0보다 큰 수")
    print("그 수는 {}입니다.".format(num))

print( "num > 0 :", (num > 0) )
print("끝~~")
'''

'''
[if문 기본 구조]
if 조건식 :
    수행문
elif 조건식 :
    수행문
elif 조건식 :
    수행문
else :
    수행문


1. 조건식
    참(True)이나 거짓(False)이 있어야 한다. (식의 결과가 T/F)
    조건식의 끝에는 콜론(:)을 붙인다. (콜론이 있으면 조건식이 끝!)
    콜론(:) 뒤부터는 수행문으로 간주한다.

2. 수행문
    조건식이 만족할 때 수행하는 코드들
    반드시 '들여쓰기'를 해야 한다. --> 공백 4개로 한다.
    수행문 코드 간의 들여쓰기가 맞지 않으면 오류가 난다ㅠㅠ

    들여쓰기만 맞으면 수행문을 여러 줄 작성할 수 있고,
    들여쓰기를 끝내면 if문의 수행문이 끝난 것
    (다른 C언어나 JAVA에서는 { } 블럭을 지정하여 수행문을 작성)

3. elif 조건식 :     (else if) 다른 만약
    위 조건식이 만족하지 않으면... (그게 아니면 만약.. 이 조건식은?)
    if문에 종속된다. (if문 없이 바로 사용할 수는 없다.)
        > 조건문의 시작은 무조건 if문으로 시작!!
    여러 개 사용 가능

4. else :
    위 조건식이 만족하지 않으면... '무조건' 여기를 수행해라!
        > 조건식이 없다.
    if문에 종속
    하나만 사용 할 수 있다 - 반드시 마지막에 위치해야 한다.
    

  > if문 밑에 elif 나 else가 종속된 경우, 하나의 '조건문'
  > if , elif, else  이 구조의 조건문은 '조건식'이 3개
    >> 하나의 조건문에 조건식이 3개다
    >> else는 조건식이 없다. 하지만 '무조건'도 하나의 조건이 된다.
'''

# (2) if, elif, else

# 정수를 판별 - 양수, 음수, 0
'''
num = int( input("숫자 입력 : ") )

if num > 0 :
    print("양수")
elif num < 0 :
    print("음수!")
#elif num == 0 : # 컴퓨터가 '비교연산'을 하여 True 값을 만들어야한다.(CPU사용) 비효율적
else : # 우리가 판단했을때, 경우의 수가 정해졌다면, 마지막은 else로 하는게 좋다.
    print("0은 양/음이 없다.")
'''
# 조건식이 하나라도 만족하여 수행문을 수행하고 나면,
# 내가 속한 '조건문' 자체를 빠져나간다.


# (3) if문 중첩
# if문의 수행문에는 어떤 코드들을 사용할 수 있을까?
#  > 기본적인 코드를 다 사용한다.
# 중첩 : if문의 수행문 안에 또 다른 if문을 사용

# 서버에 미리 저장해둔 관리자 아이디/비밀번호
'''
admin_dict = {"id":"admin", "pw":"1234"}
my_id = input("ID 입력 : ")
my_pw = input("PW 입력 : ")

if my_id == admin_dict["id"] :
    # ID 일치 = ID 존재
    if my_pw == admin_dict["pw"] :
        # 처음 if에서 id 일치, 그 안에서 pw 일치 = 둘 다 일치 = 로그인 성공
        print("관리자님 환영합니다!")
        # end2) if - pw체크
    else :
        print("패스워드가 잘못되었습니다.")
        #end2) else

    print("id는 일치하긴 합니다!")
    # end1) if - id체크
else :
    # ID 일치하지 않음
    print("아이디가 없습니다.")
'''

'''
    [비교연산자]
        조건식에 자주 사용되는 연산자
        조건에 만족하면 결과 값이 True, 아니면 False (위에서 출력해본 결과)
        a < b    a가 b보다 작니??
        a > b    a가 b보다 크니??
        a <= b   a가 b보다 작거나 같니??
        a >= b   a가 b보다 크거나 같니??
        a == b   a와 b가 같니??
        a != b   a와 b가 같지 않니?? (다르니??)

        - 컴퓨터한테 결과를 물어보는 것!! 맞으면 맞다고 가르쳐주는 값이 True
        - 등호(=)가 다른 연산자와 함께 사용될 때는 다른 연산자보다 항상 '뒤'에 위치
            > 복합대입연산자도 동일하다!!  a += 1   이런 것~~

    [논리연산자]
        a or b    a 또는 b 중에 하나라도 참이면 참 / 둘 다 거짓이어야 거짓
            C나 JAVA에서의 연산 기호 (a || b)

            a가 참 '이거나' b가 참이면 참이다

        a and b   a와 b 둘 다 참이어야 참 / 둘 중 하나라도 거짓이면 거짓
            (a && b)

            a가 참 '이고' b가 참이면 참이다

        not a     a가 거짓이면 참 / 참이면 거짓 --> 참과 거짓을 뒤집는다. (a를 부정한다)
            (!a)
        
    [포함연산자]
        a in b        b 안에 a가 있으면 참
        a not in b    b 안에 a가 없으면 참

        b에는 요소가 여러 개인 자료형의 값이 위치한다. (리스트, 튜플, 문자열 등...)
        "A" in ["A", "B"]    ---> True
            > 리스트의 첫 요소는 "A" (존재)
            
        "A" in "AB"          ---> True
            > 문자열의 첫 요소는 "A" (존재)
            
        "A" in ["ABC"]       ---> False
            > 리스트의 요소가 "ABC"이다. 문자열 "A"는 요소로 존재하지 않는다.
'''

'''
a, b = map( int, input("두 수 입력 : ").split() )

# 조건문 1
if a > 0 and b > 0 :   # a가 0보다 '크고', b가 0보다 크면
    print("둘 다 양수")
elif ((a < 0) and (b < 0)) : # 정확히 소괄호를 묶은 코드
    print("둘 다 음수")
elif a == 0 and b == 0 :
    print("둘 다 0")

# 조건문 2
if a > 0 or b > 0 :
    print("양수가 있다.")

# 조건문 3
if a < 0 or b < 0 :
    print("음수가 있다.")

# and : 좌측이 거짓이면, 우측은 연산하지 않는다. (어차피 거짓)
# or  : 좌측이 참이면, 우측은 연산하지 않는다. (어차피 참)

# 조건문 4
if not a > 0 :
    print("첫번째 숫자는 양수가 아니다.")

# 조건문 5
my_list = [1,2,3]

if a in my_list :
    print("첫번째 숫자는 1,2,3 중에 있다.")

if b not in my_list :
    print("첫번째 숫자는 1,2,3 중에 없다.")

# 조건문 6
if b not in my_list :
    print("첫번째 숫자는 1,2,3 중에 없다.")

# 조건문 7
if (a in my_list) and (b in my_list) :
    print("첫번째 숫자는 1,2,3 중에 있다.")

# 조건문 8
if (a in my_list) or (b in my_list) :
    print( "둘 중 하나는 {} 중에 있다.".format(my_list) )
'''

# 위에 있던 if문 중첩 코드 간결하게!
admin_dict = {"id":"admin", "pw":"1234"}
my_id = input("ID 입력 : ")
my_pw = input("PW 입력 : ")

if my_id == admin_dict["id"] and my_pw == admin_dict["pw"] :
    print("관리자님 환영합니다!")
    
elif my_id == admin_dict["id"] and my_pw != admin_dict["pw"] :
    print("패스워드가 잘못되었습니다.")
    print("id는 일치하긴 합니다!")

else :
    print("아이디가 없습니다.")






